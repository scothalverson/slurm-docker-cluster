services:
  mysql:
    image: mariadb:10.11
    hostname: mysql
    container_name: mysql
    environment:
      MYSQL_RANDOM_ROOT_PASSWORD: "yes"
      MYSQL_DATABASE: slurm_acct_db
      MYSQL_USER: slurm
      MYSQL_PASSWORD: password
    volumes:
      - var_lib_mysql:/var/lib/mysql
    networks:
      - slurm-network

  slurmdbd: 
    build: &slurm_base
      args:
        SLURM_TAG: slurm-21-08-6-1
      dockerfile_inline: |
        FROM nvcr.io/nvidia/nvhpc:25.5-devel-cuda12.9-rockylinux9

        LABEL org.opencontainers.image.source="https://github.com/giovtorres/slurm-docker-cluster" \
              org.opencontainers.image.title="slurm-docker-cluster" \
              org.opencontainers.image.description="Slurm Docker cluster on Rocky Linux 9" \
              org.label-schema.docker.cmd="docker-compose up -d" \
              maintainer="Giovanni Torres"

        RUN set -ex \
            && yum makecache \
            && yum -y update \
            && yum -y install dnf-plugins-core \
            && yum config-manager --enable crb \
            && yum -y install \
               wget \
               bzip2 \
               perl \
               gcc \
               gcc-c++\
               git \
               gnupg \
               make \
               munge \
               munge-devel \
               python3-devel \
               python3-pip \
               python3 \
               mariadb-server \
               mariadb-devel \
               psmisc \
               bash-completion \
               vim-enhanced \
               http-parser-devel \
               json-c-devel \
            && yum clean all \
            && rm -rf /var/cache/yum

        RUN pip3 install Cython pytest

        ARG GOSU_VERSION=1.17

        RUN set -ex \
            && wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/1.17/gosu-amd64" \
            && wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/1.17/gosu-amd64.asc" \
            && export GNUPGHOME="$(mktemp -d)" \
            && gpg --batch --keyserver hkps://keys.openpgp.org --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 \
            && gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \
            && rm -rf "${GNUPGHOME}" /usr/local/bin/gosu.asc \
            && chmod +x /usr/local/bin/gosu \
            && gosu nobody true

        RUN set -x \
            && git clone -b slurm-21-08-6-1 --single-branch --depth=1 https://github.com/SchedMD/slurm.git \
            && pushd slurm \
            && ./configure --enable-debug --prefix=/usr --sysconfdir=/etc/slurm \
                --with-mysql_config=/usr/bin  --libdir=/usr/lib64 \
            && make -j install \
            && install -D -m644 etc/cgroup.conf.example /etc/slurm/cgroup.conf.example \
            && install -D -m644 etc/slurm.conf.example /etc/slurm/slurm.conf.example \
            && install -D -m644 etc/slurmdbd.conf.example /etc/slurm/slurmdbd.conf.example \
            && install -D -m644 contribs/slurm_completion_help/slurm_completion.sh /etc/profile.d/slurm_completion.sh \
            && popd \
            && rm -rf slurm \
            && groupadd -r --gid=990 slurm \
            && useradd -r -g slurm --uid=990 slurm \
            && mkdir /etc/sysconfig/slurm \
                /var/spool/slurmd \
                /var/run/slurmd \
                /var/run/slurmdbd \
                /var/lib/slurmd \
                /var/log/slurm \
                /data \
            && touch /var/lib/slurmd/node_state \
                /var/lib/slurmd/front_end_state \
                /var/lib/slurmd/job_state \
                /var/lib/slurmd/resv_state \
                /var/lib/slurmd/trigger_state \
                /var/lib/slurmd/assoc_mgr_state \
                /var/lib/slurmd/assoc_usage \
                /var/lib/slurmd/qos_usage \
                /var/lib/slurmd/fed_mgr_state \
            && chown -R slurm:slurm /var/*/slurm* \
            && /sbin/create-munge-key \
            && chown -R root:root /etc/munge/ \
            && chown 0:0 /etc/munge/munge.key \
            && chown -R root:root /var/log/munge \
            && chown -R root:root /var/lib/munge \
            && chmod 600 /etc/munge/munge.key \
            && chown -R root:root /run/munge

        RUN gosu root chown -R 0:0 /etc/munge/

        #download slurm.conf
        ADD https://raw.githubusercontent.com/scothalverson/slurm-docker-cluster/refs/heads/main/slurm.conf /etc/slurm/slurm.conf
        #download slurmdbd.con
        ADD https://raw.githubusercontent.com/scothalverson/slurm-docker-cluster/refs/heads/main/slurmdbd.conf /etc/slurm/slurmdbd.conf
        #download entrypoint script
        ADD https://raw.githubusercontent.com/scothalverson/slurm-docker-cluster/refs/heads/main/docker-entrypoint.sh /usr/local/bin/entrypoint.sh
        RUN gosu root chown 0:0 /usr/local/bin/entrypoint.sh
        RUN gosu root chmod -R 755 /usr/local/bin/entrypoint.sh
    command: ["/usr/local/bin/entrypoint.sh","slurmdbd"]
    container_name: slurmdbd
    hostname: slurmdbd
    volumes:
      - etc_munge:/etc/munge
      - etc_slurm:/etc/slurm
      - var_log_slurm:/var/log/slurm
    expose:
      - "6819"
    depends_on:
      - mysql
    networks:
      - slurm-network

  slurmctld:
    build:
      <<: *slurm_base
    command: ["slurmctld"]
    container_name: slurmctld
    hostname: slurmctld
    volumes:
      - etc_munge:/etc/munge
      - etc_slurm:/etc/slurm
      - ./slurm_jobdir:/data
      - var_log_slurm:/var/log/slurm
    expose:
      - "6817"
    depends_on:
      - "slurmdbd"
    networks:
      - slurm-network

  c1: &node_base
    build:
      <<: *slurm_base
    command: ["slurmd"]
    hostname: c1
    container_name: c1
    volumes:
      - etc_munge:/etc/munge
      - etc_slurm:/etc/slurm
      - ./slurm_jobdir:/data
      - var_log_slurm:/var/log/slurm
    expose:
      - "6818"
    depends_on:
      - "slurmctld"
    networks:
      - slurm-network
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              device_ids: ['0']
              capabilities: [gpu]

  c2:
    <<: *node_base
    hostname: c2
    container_name: c2
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              device_ids: ['1']
              capabilities: [gpu]

volumes:
  etc_munge:
  etc_slurm:
  var_lib_mysql:
  var_log_slurm:

networks:
  slurm-network:
    driver: bridge
